<Activity mc:Ignorable="sap sap2010" x:Class="BeginningAgingReportFilteration" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:moie="clr-namespace:Microsoft.Office.Interop.Excel;assembly=Microsoft.Office.Interop.Excel" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentYear" Type="InArgument(x:Int32)" />
    <x:Property Name="in_CurrentMonth" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>395.2,888</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BeginningAgingReportFilteration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Beginning Agining Report Generation." DisplayName="Sequence_Beginning Agining Report" sap:VirtualizedContainerService.HintSize="375.2,828" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This Invoke code create the .csc file in local folder" Code="Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim begWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim endWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim arMovWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim billingWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim currentMonthBilling As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xA;Dim wb2 As Microsoft.Office.Interop.Excel.Workbook&#xA;Try&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xA;  excel.DisplayAlerts=False&#xA;wb2=excel.Workbooks.Add&#xA;wb2.SaveAs(Filename:=in_FilePath+in_CurrentMonth+&quot;-&quot;+in_CurrentYear.ToString+&quot;\InvoiceNumber.csv&quot;,FileFormat:=Microsoft.Office.Interop.Excel.XlFileFormat.xlCSV,ReadOnlyRecommended:=True)&#xA;&#xA;&#xA;&#xA;Catch es As Exception&#xA; Console.WriteLine(es.Message)&#xA; Throw es&#xA;Finally&#xA; &#xA; wb2.Close&#xA; excel.Quit&#xA; &#xA;End Try" DisplayName="Invoke Code CSV file creation" sap:VirtualizedContainerService.HintSize="333.6,192.8" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:ApplicationClass" x:Key="excel" />
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_FilePath]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_CurrentYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CurrentMonth">[in_CurrentMonth]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message InvoiceNumber.csv file created" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="InvoiceNumber.csv file created" />
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This workflow do the necessary filtration with BeginningAgeing and Billing sheet" Code="Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim begWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim endWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim arMovWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim billingWs As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim currentMonthBilling As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xA;Dim wb2 As Microsoft.Office.Interop.Excel.Workbook&#xA;Try&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xA;&#xA;&#xA; wb=excel.Workbooks.Open(in_FilePath+in_CurrentMonth+&quot;-&quot;+in_CurrentYear.ToString+&quot;\Phase 1-Buy sell Automation.xlsx&quot;)&#xA; wb1=excel.Workbooks.Open(in_FilePath+in_CurrentMonth+&quot;-&quot;+in_CurrentYear.ToString+&quot;\Billing.xlsx&quot;)&#xA;  excel.DisplayAlerts=False&#xA; excel.Visible=True&#xA; &#xA;begWs=CType(wb.Sheets(&quot;Begining Ageing&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xA;begWs.Activate&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;endWs=CType(wb.Sheets(&quot;Ending Ageing(Buy Sell)&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xA;endWs.Activate&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;arMovWs=CType(wb.Sheets(&quot;AR Movement&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xA;arMovWs.Activate&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;billingWs=CType(wb.Sheets(&quot;Billing Report&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xA;billingWs.Activate&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;currentMonthBilling=CType(wb1.Sheets(&quot;Billing&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xA;currentMonthBilling.Activate&#xA;&#xA;'To find Cell number of Customer Name in Beginning Ageing and Ending Ageing sheet&#xA;Dim begInd As Integer&#xA;Dim endInd As Integer&#xA;begInd = begWs.UsedRange.Find(&quot;Customer Name&quot;).Row+1&#xA;endInd = endWs.UsedRange.Find(&quot;Customer Name&quot;).Row+1 &#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;'To find Cell number of Invoice Date in AR Movement sheet&#xA;Dim arMovementInd As Integer&#xA;arMovementInd = arMovWs.UsedRange.Find(&quot;Invoice Date&quot;).Row+1&#xA;&#xA;'Find the cell for Invoice Date, Invoice Number,Currency,Customer Name,Customer Number,Transactional Currency in AR Movement sheet&#xA;Dim armInvoiceIndate As String&#xA;Dim begInvoice As String&#xA;Dim begInvoiceNo As String&#xA;Dim armInvoiceNo As String&#xA;Dim begCurrency As String&#xA;Dim armCurrency As String&#xA;Dim begCustName As String&#xA;Dim armCustName As String&#xA;Dim begCustNo As String&#xA;Dim armCustNo As String&#xA;Dim begTxtAmt As String&#xA;Dim armTxtAmt As String&#xA;Dim begRange As Microsoft.Office.Interop.Excel.Range&#xA;Dim newArmRange As String&#xA;armInvoiceIndate = arMovWs.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xA;armInvoiceNo = arMovWs.UsedRange.Find(&quot;Invoice  Number&quot;).Address.ToString&#xA;armCurrency = arMovWs.UsedRange.Find(&quot;Currency&quot;).Address.ToString&#xA;armCustName = arMovWs.UsedRange.Find(&quot;Bill to Customer Name&quot;).Address.ToString&#xA;armCustNo = arMovWs.UsedRange.Find(&quot;Bill to Customer No&quot;).Address.ToString&#xA;armTxtAmt = arMovWs.UsedRange.Find(&quot;Total in transactional currency&quot;).Address.ToString&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;'Find cell for Invoice Date, Invoice Number,Customer Name,Customer Number,Amount Due in Begining sheet&#xA;begInvoice = begWs.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xA;&#xA;'Create range for Begining sheet&#xA;begRange = begWs.Range(begInvoice.Replace(&quot;$&quot;,&quot;&quot;).Trim)&#xA;&#xA;begInvoiceNo = begRange.Find(&quot;Invoice  Number&quot;).Address.ToString&#xA;begCurrency = begRange.Find(&quot;Currency&quot;).Address.ToString&#xA;begCustName = begRange.Find(&quot;Customer Name&quot;).Address.ToString&#xA;begCustNo = begRange.Find(&quot;Customer Number&quot;).Address.ToString&#xA;begTxtAmt = begRange.Find(&quot;Amount Due&quot;).Address.ToString&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;'Find cell for Invoice Date, Invoice Number,Customer Name,Customer Number,Amount Due in Billing sheet&#xA;Dim billInvoiceDate As String&#xA;Dim billInvoiceNo As String&#xA;Dim billCurrency As String&#xA;Dim billCustName As String&#xA;Dim billCustNo As String&#xA;Dim billTxtAmt As String&#xA;billInvoiceDate = billingWs.UsedRange.Find(&quot;Invoice Date&quot;).Address.ToString&#xA;billInvoiceNo = billingWs.UsedRange.Find(&quot;Transaction Number&quot;).Address.ToString&#xA;billCurrency = billingWs.UsedRange.Find(&quot;Invoice Currency &quot;).Address.ToString&#xA;billCustName = billingWs.UsedRange.Find(&quot;Bill to Customer Name&quot;).Address.ToString&#xA;billCustNo = billingWs.UsedRange.Find(&quot;Bill to Customer No&quot;).Address.ToString&#xA;billTxtAmt = billingWs.UsedRange.Find(&quot;Gross amount of sale in transactional currency&quot;).Address.ToString&#xA;console.WriteLine(&quot;sheets open&quot;)&#xA;'To find total rows&#xA;Dim lastRow As Integer&#xA;Dim endLastRow As Integer&#xA;Dim arMovLastRow As Integer&#xA;LastRow = begWs.UsedRange.Rows.Count&#xA;endLastRow = endWs.UsedRange.Rows.Count&#xA;arMovLastRow = arMovWs.UsedRange.Rows.Count&#xA;&#xA;'To delete data from Begining sheet&#xA;begWs.Range(begInd.ToString+&quot;:&quot;+lastRow.ToString).Delete&#xA;&#xA;'To copy data from Ending sheet&#xA;endWs.Range(&quot;A&quot;+endInd.ToString+&quot;:&quot;+&quot;AW&quot;+endLastRow.ToString).Rows.Copy&#xA;console.WriteLine(&quot;Data copied to beginning ageing&quot;)&#xA;'To paste data into Begining sheet&#xA;begWs.Range(&quot;A&quot;+begInd.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'To delete data of Ending sheet&#xA;endWs.Range(endInd.ToString+&quot;:&quot;+endLastRow.ToString).Delete&#xA;console.WriteLine(&quot;deleted from ending ageing&quot;)&#xA;'To delete the data from billing sheet&#xA;billingWs.Range(&quot;A14:T&quot;+billingWs.UsedRange.Rows.Count.ToString).Delete&#xA;&#xA;'To copy data from billing sheet&#xA;currentMonthBilling.Range(&quot;A15:T&quot;+currentMonthBilling.UsedRange.Rows.Count.ToString).Rows.Copy&#xA;console.WriteLine(&quot;Data copied to billing&quot;)&#xA;'To paste data into Billing tab&#xA;billingWs.Range(&quot;A14&quot;).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'To delete column A to F in AR Movement sheet&#xA;arMovWs.Range(&quot;A&quot;+arMovementInd.ToString+&quot;:G&quot;+(arMovLastRow+1).ToString).ClearContents&#xA;&#xA;'Copy Invoice Date column from Begining sheet&#xA;begWs.Range(begInvoice.Split(&quot;$&quot;c)(1)+(CInt(begInvoice.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begInvoice.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;console.WriteLine(&quot;copied invoice date&quot;)&#xA;'Paste Invoice Date into AR Movement sheet&#xA;arMovWs.Range(armInvoiceIndate.Split(&quot;$&quot;c)(1)+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Invoice Number column from Begining sheet&#xA;begWs.Range(begInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(begInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begInvoiceNo.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Invoice Number into AR Movement sheet&#xA;arMovWs.Range(armInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(armInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Currency column from Begining sheet&#xA;begWs.Range(begCurrency.Split(&quot;$&quot;c)(1)+(CInt(begCurrency.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begCurrency.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Currency into AR Movement sheet&#xA;arMovWs.Range(armCurrency.Split(&quot;$&quot;c)(1)+(CInt(armCurrency.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Customer Name column from Begining sheet&#xA;begWs.Range(begCustName.Split(&quot;$&quot;c)(1)+(CInt(begCustName.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begCustName.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Customer Name into AR Movement sheet&#xA;arMovWs.Range(armCustName.Split(&quot;$&quot;c)(1)+(CInt(armCustName.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Customer Number column from Begining sheet&#xA;begWs.Range(begCustNo.Split(&quot;$&quot;c)(1)+(CInt(begCustNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begCustNo.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Customer Number into AR Movement sheet&#xA;arMovWs.Range(armCustNo.Split(&quot;$&quot;c)(1)+(CInt(armCustNo.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Amount Due column From Begining sheet&#xA;begWs.Range(begTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(begTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+begTxtAmt.Split(&quot;$&quot;c)(1)+begWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Total in transactional currency Into AR Movement sheet&#xA;arMovWs.Range(armTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(armTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;&#xA;lastRow = CInt(begWs.Range(&quot;A&quot;+begWs.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString.Split(&quot;$&quot;c)(2))&#xA;&#xA;'Calculate last used row range for AR movement sheet&#xA;Dim armRangLastRow As Integer&#xA;armRangLastRow = (lastRow-CInt(begInvoice.Split(&quot;$&quot;c)(2)))+CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1&#xA;&#xA;'Copy Invoice Date column from Billing sheet&#xA;billingWs.Range(billInvoiceDate.Split(&quot;$&quot;c)(1)+(CInt(billInvoiceDate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billInvoiceDate.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Invoice Date into AR Movement sheet&#xA;arMovWs.Range(armInvoiceIndate.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Invoice Number column from Billing sheet&#xA;billingWs.Range(billInvoiceNo.Split(&quot;$&quot;c)(1)+(CInt(billInvoiceNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billInvoiceNo.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Invoice Number into AR Movement sheet&#xA;arMovWs.Range(armInvoiceNo.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Currency column from Billing sheet&#xA;billingWs.Range(billCurrency.Split(&quot;$&quot;c)(1)+(CInt(billCurrency.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billCurrency.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Currency into AR Movement sheet&#xA;arMovWs.Range(armCurrency.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Customer Name column from Billing sheet&#xA;billingWs.Range(billCustName.Split(&quot;$&quot;c)(1)+(CInt(billCustName.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billCustName.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Customer Name into AR Movement sheet&#xA;arMovWs.Range(armCustName.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Customer Number column from Billing sheet&#xA;billingWs.Range(billCustNo.Split(&quot;$&quot;c)(1)+(CInt(billCustNo.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billCustNo.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Customer Number into AR Movement sheet&#xA;arMovWs.Range(armCustNo.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;&#xA;'Copy Transaction Amount column from Billing sheet&#xA;billingWs.Range(billTxtAmt.Split(&quot;$&quot;c)(1)+(CInt(billTxtAmt.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:&quot;+billTxtAmt.Split(&quot;$&quot;c)(1)+billingWs.UsedRange.Rows.Count.ToString).Copy&#xA;&#xA;'Paste Transaction Amount into AR Movement sheet&#xA;arMovWs.Range(armTxtAmt.Split(&quot;$&quot;c)(1)+armRangLastRow.ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll)&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;newArmRange = arMovWs.Range(&quot;F&quot;+arMovWs.UsedRange.Rows.Count.ToString).End(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString.Split(&quot;$&quot;c)(2)&#xA;'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'To delete or add Buy sell&#xA;arMovWs.Range(&quot;G&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:G&quot;+newArmRange).Value = &quot;Buy Sell&quot;&#xA;&#xA;'Apply Formula for column H&#xA;arMovWs.Range(&quot;H&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+newArmRange).Formula = &quot;=IF(ISERROR(VLOOKUP(B&quot;+arMovWs.Range(&quot;H&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+newArmRange).Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)),0,(VLOOKUP(B&quot;+arMovWs.Range(&quot;H&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:H&quot;+newArmRange).Row.ToString+&quot;,'Ending Ageing(Buy Sell)'!E:O,11,0)))&quot;&#xA;'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column I&#xA;arMovWs.Range(&quot;I&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+newArmRange).Formula = &quot;=H&quot;+arMovWs.Range(&quot;I&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+newArmRange).Row.ToString+&quot;-F&quot;+arMovWs.Range(&quot;I&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:I&quot;+newArmRange).Row.ToString&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for  Column J&#xA;arMovWs.Range(&quot;J&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:J&quot;+newArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+arMovWs.Range(&quot;J&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:J&quot;+newArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!S:S)&quot;&#xA;'-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column K&#xA;arMovWs.Range(&quot;K&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:K&quot;+newArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+arMovWs.Range(&quot;K&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:K&quot;+newArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!U:U)&quot;&#xA;'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula For Column L&#xA;arMovWs.Range(&quot;L&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:L&quot;+newArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+arMovWs.Range(&quot;L&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:L&quot;+newArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!X:X)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column M&#xA;arMovWs.Range(&quot;M&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+newArmRange).Formula = &quot;=SUM(I&quot;+arMovWs.Range(&quot;M&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+newArmRange).Row.ToString+&quot;:L&quot;+arMovWs.Range(&quot;M&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:M&quot;+newArmRange).Row.ToString+&quot;)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column N&#xA;arMovWs.Range(&quot;N&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:N&quot;+newArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+arMovWs.Range(&quot;N&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:N&quot;+newArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!V:V)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column O&#xA;arMovWs.Range(&quot;O&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:O&quot;+newArmRange).Formula = &quot;=SUMIF('Buy Sell INVOICE Application'!$B:$S,'AR Movement'!B&quot;+arMovWs.Range(&quot;O&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:O&quot;+newArmRange).Row.ToString+&quot;,'Buy Sell INVOICE Application'!W:W)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column P&#xA;arMovWs.Range(&quot;P&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:P&quot;+newArmRange).Formula = &quot;=SUMIF('buy Sell Opening Cash applicati'!B:B,B&quot;+arMovWs.Range(&quot;P&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:P&quot;+newArmRange).Row.ToString+&quot;,'buy Sell Opening Cash applicati'!K:K)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column R&#xA;arMovWs.Range(&quot;R&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:R&quot;+newArmRange).Formula = &quot;=IFERROR(VLOOKUP(B&quot;+arMovWs.Range(&quot;R&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:R&quot;+newArmRange).Row.ToString+&quot;,'buy Sell Opening Cash applicati'!B:K,10,0),0)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;'Apply Formula for Column U&#xA;arMovWs.Range(&quot;U&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+newArmRange).Formula = &quot;=SUBTOTAL(9,M&quot;+arMovWs.Range(&quot;U&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+newArmRange).Row.ToString+&quot;:T&quot;+arMovWs.Range(&quot;U&quot;+(CInt(armInvoiceIndate.Split(&quot;$&quot;c)(2))+1).ToString+&quot;:U&quot;+newArmRange).Row.ToString+&quot;)&quot;&#xA;'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#xA;&#xA;&#xA;Catch es As Exception&#xA; Console.WriteLine(es.Message)&#xA; Throw es&#xA;Finally&#xA; wb.Save&#xA; wb.Close&#xA; excel.Quit&#xA; &#xA;End Try" DisplayName="Invoke Code Beginning Ageing and Billing Filtration" sap:VirtualizedContainerService.HintSize="333.6,208.8" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:ApplicationClass" x:Key="excel" />
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_FilePath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CurrentMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_CurrentYear">[in_CurrentYear]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message Beginning ageing and billing filtration completed" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Beginning ageing and billing filtration completed" />
  </Sequence>
</Activity>