<Activity mc:Ignorable="sap sap2010" x:Class="FiltrationWithBuySellInvoiceApplication" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:moie="clr-namespace:Microsoft.Office.Interop.Excel;assembly=Microsoft.Office.Interop.Excel" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentMonth" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentYear" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>395.2,522.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FiltrationWithBuySellInvoiceApplication_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="FiltrationWithBuySellInvoiceApplication." DisplayName="Sequence_FiltrationWithBuySellInvoiceApplication" sap:VirtualizedContainerService.HintSize="375.2,462.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This Invoke code do the necessary filtration with BuySellInvoiceApplication" Code="Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim ws1 As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim ws2 As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Dim lastRow1 As Integer&#xD;&#xA;Dim lastRow2 As String&#xD;&#xA;Dim lastrowStr As String&#xD;&#xA;Dim lastRow3 As String&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA;  &#xD;&#xA; wb=excel.Workbooks.Open(in_FilePath+in_CurrentMonth+&quot;-&quot;+in_CurrentYear.ToString+&quot;\Phase 1-Buy sell Automation.xlsx&quot;)&#xD;&#xA; excel.DisplayAlerts=False&#xD;&#xA; excel.Visible=True&#xD;&#xA;ws=CType(wb.Sheets(&quot;Buy Sell INVOICE Application&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA;ws.Activate&#xD;&#xA;&#xD;&#xA;lastRow=ws.UsedRange.Rows.Count&#xD;&#xA; ws.Range(&quot;A10:Q&quot;+lastRow.ToString).ClearContents&#xD;&#xA; wb1=excel.Workbooks.Open(in_FilePath+in_CurrentMonth+&quot;-&quot;+in_CurrentYear.ToString+&quot;\EBSDownload.xlsx&quot;)&#xD;&#xA; ws1=CType(wb1.Sheets(&quot;FNDWRR&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA;ws1.Activate&#xD;&#xA;lastrowStr=ws1.Range(&quot;K:K&quot;).SpecialCells(Type:=Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell).Address.ToString&#xD;&#xA;console.WriteLine(lastrowStr)&#xD;&#xA;lastrowStr=lastrowStr.Replace(&quot;$&quot;,&quot;&quot;)&#xD;&#xA;lastrowStr=lastrowStr.Split(&quot;Q&quot;c)(1)&#xD;&#xA;ws1.Range(&quot;A1:Q&quot;+lastrowStr).AutoFilter(Field:=ws1.UsedRange.Find(&quot;Applied Date&quot;).Column,Criteria1:=&quot;&gt;=11/02/2019&quot;,Criteria2:=&quot;&lt;=11/29/2019&quot;,Operator:=microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlFilterValues)&#xD;&#xA;&#xD;&#xA;console.WriteLine(lastrowStr)&#xD;&#xA;ws1.Range(&quot;A2:Q&quot;+lastrowStr).Rows.Copy&#xD;&#xA;ws.Range(&quot;A10&quot;).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulasAndNumberFormats)&#xD;&#xA;lastRow2=ws.Range(&quot;A&quot;+ws.UsedRange.Rows.Count.ToString).end(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString &#xD;&#xA;console.WriteLine(lastRow2)&#xD;&#xA;lastRow2=lastRow2.Replace(&quot;$&quot;,&quot;&quot;)&#xD;&#xA;lastRow2=lastRow2.Split(&quot;A&quot;c)(1)&#xD;&#xA;lastRow3=ws.Range(&quot;R&quot;+ws.UsedRange.Rows.Count.ToString).end(Microsoft.Office.Interop.Excel.XlDirection.xlUp).Address.ToString &#xD;&#xA;&#xD;&#xA;lastRow3=lastRow3.Replace(&quot;$&quot;,&quot;&quot;)&#xD;&#xA;lastRow3=lastRow3.Split(&quot;R&quot;c)(1)&#xD;&#xA;&#xD;&#xA;ws.Range(&quot;R10:X10&quot;).Copy&#xD;&#xA;ws.Range(&quot;R11:X&quot;+lastRow2).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas)&#xD;&#xA;ws.Range(&quot;R&quot;+(CInt(lastRow2)+1).ToString+&quot;:X&quot;+(CInt(lastRow3)+1).ToString).ClearContents&#xD;&#xA;ws.Range(&quot;R11:X&quot;+lastRow2).Copy&#xD;&#xA;ws.Range(&quot;R11:X&quot;+lastRow2).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues)&#xD;&#xA;console.WriteLine(&quot;remove filter&quot;)&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA; Throw es&#xD;&#xA;Finally&#xD;&#xA;wb.Save&#xD;&#xA;wb.Close&#xD;&#xA;excel.Quit&#xD;&#xA; &#xD;&#xA;End Try" DisplayName="Invoke Code _FiltrationWithBuySellInvoiceApplication" sap:VirtualizedContainerService.HintSize="333.6,208.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="moie:ApplicationClass" x:Key="excel" />
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_FilePath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CurrentMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_CurrentYear">[in_CurrentYear]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message BuySellInvoiceApplication completed" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="BuySellInvoiceApplication completed" />
  </Sequence>
</Activity>